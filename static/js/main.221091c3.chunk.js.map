{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","this","props","images","step","frameSize","itemWidth","animationDuration","infinity","className","type","onClick","setState","length","Math","max","cn","disabled","style","width","transform","transition","map","image","src","alt","height","id","min","Component","App","htmlFor","name","value","onChange","event","target","checked","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.221091c3.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Component } from 'react';\nimport { Image } from '../react-app-env';\nimport './Carousel.scss';\n\ntype Props = {\n  images: Image[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinity: boolean;\n};\n\ntype State = {\n  position: number;\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinity,\n    } = this.props;\n\n    const { position } = this.state;\n\n    const onNextClick = () => {\n      this.setState(state => (\n        (infinity && state.position === images.length - frameSize)\n          ? { position: 0 }\n          : {\n            position: Math.min(\n              state.position + step,\n              images.length - frameSize,\n            ),\n          }\n      ));\n    };\n\n    const onPrevClick = () => {\n      this.setState(state => (\n        (infinity && state.position === 0)\n          ? { position: images.length - frameSize }\n          : { position: Math.max(state.position - step, 0) }\n      ));\n    };\n\n    return (\n      <div className=\"container\">\n        <button\n          type=\"button\"\n          onClick={onPrevClick}\n          className={cn(\n            'button',\n            { 'button--disabled': !infinity && !position },\n          )}\n          disabled={!infinity && !position}\n        >\n          {'<<'}\n        </button>\n\n        <div\n          className=\"Carousel\"\n          style={{\n            width: `${itemWidth * frameSize}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              width: `${itemWidth * images.length}px`,\n              transform: `translateX(-${itemWidth * position}px)`,\n              transition: `transform ${animationDuration}ms`,\n            }}\n          >\n            {images.map(image => (\n              <li className=\"Carousel__item\" key={image.id}>\n                <img\n                  src={image.src}\n                  alt=\"Emoji\"\n                  width={`${itemWidth}px`}\n                  height={`${itemWidth}px`}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={onNextClick}\n          className={cn(\n            'button',\n            {\n              'button--disabled': !infinity\n                && position === images.length - frameSize,\n            },\n          )}\n          disabled={!infinity && position === images.length - frameSize}\n        >\n          {'>>'}\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { Image } from './react-app-env';\n\ninterface State {\n  images: Image[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinity: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      { src: './img/1.png', id: 1 },\n      { src: './img/2.png', id: 2 },\n      { src: './img/3.png', id: 3 },\n      { src: './img/4.png', id: 4 },\n      { src: './img/5.png', id: 5 },\n      { src: './img/6.png', id: 6 },\n      { src: './img/7.png', id: 7 },\n      { src: './img/8.png', id: 8 },\n      { src: './img/9.png', id: 9 },\n      { src: './img/10.png', id: 10 },\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  // handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   const { name, value } = event.target;\n\n  //   this.setState({ [name]: +value });\n  // };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n\n        <div className=\"inputs\">\n          <h2 className=\"inputs__title\">Make a choice</h2>\n\n          <div className=\"inputs__input input\">\n            <label htmlFor=\"itemId\">\n              <strong className=\"input__text\">Emodjies width:</strong>\n              <span className=\"input__value\">{` ${itemWidth}px`}</span>\n            </label>\n\n            <input\n              id=\"itemId\"\n              type=\"range\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              min=\"100\"\n              max=\"200\"\n              onChange={(event) => {\n                this.setState({ itemWidth: +event.target.value });\n              }}\n              className=\"input_range\"\n            />\n          </div>\n\n          <div className=\"inputs__input input\">\n            <label htmlFor=\"frameId\">\n              <strong className=\"input__text\">Frame size:</strong>\n              <span className=\"input__value\">{` ${frameSize}`}</span>\n            </label>\n\n            <input\n              id=\"frameId\"\n              type=\"range\"\n              name=\"frameSize\"\n              value={frameSize}\n              min=\"2\"\n              max=\"5\"\n              onChange={(event) => {\n                this.setState({ frameSize: +event.target.value });\n              }}\n              className=\"input_range\"\n            />\n          </div>\n\n          <div className=\"inputs__input input\">\n            <label htmlFor=\"stepId\">\n              <strong className=\"input__text\">Step:</strong>\n              <span className=\"input__value\">{` ${step}`}</span>\n            </label>\n\n            <input\n              id=\"stepId\"\n              type=\"range\"\n              name=\"step\"\n              value={step}\n              min=\"2\"\n              max=\"5\"\n              onChange={(event) => {\n                this.setState({ step: +event.target.value });\n              }}\n              className=\"input_range\"\n            />\n          </div>\n\n          <div className=\"inputs__input input\">\n            <label htmlFor=\"animationDuration\">\n              <strong className=\"input__text\">Animation duration:</strong>\n              <span className=\"input__value\">{` ${animationDuration}ms`}</span>\n            </label>\n\n            <input\n              id=\"animationDuration\"\n              type=\"range\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              min=\"1000\"\n              max=\"3000\"\n              onChange={(event) => {\n                this.setState({ animationDuration: +event.target.value });\n              }}\n              className=\"input_range\"\n            />\n          </div>\n\n          <div className=\"inputs__input input input--checkbox\">\n            <label className=\"input__text\" htmlFor=\"infinity\">\n              <strong>Infinity</strong>\n            </label>\n\n            <input\n              id=\"infinity\"\n              type=\"checkbox\"\n              name=\"infinity\"\n              checked={infinity}\n              onChange={(event) => {\n                this.setState({ infinity: event.target.checked });\n              }}\n            />\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}